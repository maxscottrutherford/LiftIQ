{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_a71539c9-module__T19VSG__className\",\n  \"variable\": \"geist_a71539c9-module__T19VSG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,gKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,gKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,gKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_8d43a2aa-module__8Li5zG__className\",\n  \"variable\": \"geist_mono_8d43a2aa-module__8Li5zG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/maxrutherford/Desktop/LiftIQ/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport { ColorSchemeScript, MantineProvider, mantineHtmlProps } from \"@mantine/core\";\nimport { Notifications } from \"@mantine/notifications\";\nimport { ModalsProvider } from \"@mantine/modals\";\nimport { Spotlight } from \"@mantine/spotlight\";\nimport { NavigationProgress } from \"@mantine/nprogress\";\nimport \"@mantine/core/styles.css\";\nimport \"@mantine/notifications/styles.css\";\nimport \"@mantine/spotlight/styles.css\";\nimport \"@mantine/nprogress/styles.css\";\nimport \"./globals.css\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"LiftIQ\",\n  description: \"A modern application built with Next.js, React, TypeScript, and Mantine\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" {...mantineHtmlProps}>\n      <head>\n        <ColorSchemeScript />\n      </head>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <MantineProvider\n          theme={{\n            primaryColor: 'blue',\n            defaultRadius: 'md',\n          }}\n        >\n          <ModalsProvider>\n            <Spotlight actions={[]}>\n              <NavigationProgress />\n              <Notifications />\n              {children}\n            </Spotlight>\n          </ModalsProvider>\n        </MantineProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;QAAM,GAAG,oNAAgB;;0BAClC,8OAAC;0BACC,cAAA,8OAAC,mOAAiB;;;;;;;;;;0BAEpB,8OAAC;gBACC,WAAW,GAAG,oJAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,yJAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;0BAEpE,cAAA,8OAAC,0MAAe;oBACd,OAAO;wBACL,cAAc;wBACd,eAAe;oBACjB;8BAEA,cAAA,8OAAC;kCACC,cAAA,8OAAC;4BAAU,SAAS,EAAE;;8CACpB,8OAAC;;;;;8CACD,8OAAC;;;;;gCACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOf","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///Users/maxrutherford/Desktop/LiftIQ/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/maxrutherford/Desktop/LiftIQ/node_modules/%40mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ColorSchemeScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call ColorSchemeScript() from the server but ColorSchemeScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs <module evaluation>\",\n    \"ColorSchemeScript\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6HACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///Users/maxrutherford/Desktop/LiftIQ/node_modules/%40mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ColorSchemeScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call ColorSchemeScript() from the server but ColorSchemeScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs\",\n    \"ColorSchemeScript\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,yGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs","sources":["file:///Users/maxrutherford/Desktop/LiftIQ/node_modules/%40mantine/core/src/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.tsx"],"sourcesContent":["import type { MantineColorScheme } from '../theme.types';\n\nexport interface ColorSchemeScriptProps extends React.ComponentPropsWithoutRef<'script'> {\n  forceColorScheme?: 'light' | 'dark';\n  defaultColorScheme?: MantineColorScheme;\n  localStorageKey?: string;\n}\n\nconst getScript = ({\n  defaultColorScheme,\n  localStorageKey,\n  forceColorScheme,\n}: Pick<ColorSchemeScriptProps, 'defaultColorScheme' | 'localStorageKey' | 'forceColorScheme'>) =>\n  forceColorScheme\n    ? `document.documentElement.setAttribute(\"data-mantine-color-scheme\", '${forceColorScheme}');`\n    : `try {\n  var _colorScheme = window.localStorage.getItem(\"${localStorageKey}\");\n  var colorScheme = _colorScheme === \"light\" || _colorScheme === \"dark\" || _colorScheme === \"auto\" ? _colorScheme : \"${defaultColorScheme}\";\n  var computedColorScheme = colorScheme !== \"auto\" ? colorScheme : window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n  document.documentElement.setAttribute(\"data-mantine-color-scheme\", computedColorScheme);\n} catch (e) {}\n`;\n\nexport function ColorSchemeScript({\n  defaultColorScheme = 'light',\n  localStorageKey = 'mantine-color-scheme-value',\n  forceColorScheme,\n  ...others\n}: ColorSchemeScriptProps) {\n  const _defaultColorScheme = ['light', 'dark', 'auto'].includes(defaultColorScheme)\n    ? defaultColorScheme\n    : 'light';\n  return (\n    <script\n      {...others}\n      data-mantine-script\n      dangerouslySetInnerHTML={{\n        __html: getScript({\n          defaultColorScheme: _defaultColorScheme,\n          localStorageKey,\n          forceColorScheme,\n        }),\n      }}\n    />\n  );\n}\n"],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///Users/maxrutherford/Desktop/LiftIQ/node_modules/%40mantine/core/esm/core/MantineProvider/MantineProvider.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const HeadlessMantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HeadlessMantineProvider() from the server but HeadlessMantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs <module evaluation>\",\n    \"HeadlessMantineProvider\",\n);\nexport const MantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call MantineProvider() from the server but MantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs <module evaluation>\",\n    \"MantineProvider\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,0BAA0B,IAAA,wQAAuB,EAC1D;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,yGACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,yGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///Users/maxrutherford/Desktop/LiftIQ/node_modules/%40mantine/core/esm/core/MantineProvider/MantineProvider.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const HeadlessMantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HeadlessMantineProvider() from the server but HeadlessMantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs\",\n    \"HeadlessMantineProvider\",\n);\nexport const MantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call MantineProvider() from the server but MantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs\",\n    \"MantineProvider\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,0BAA0B,IAAA,wQAAuB,EAC1D;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,qFACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,qFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs","sources":["file:///Users/maxrutherford/Desktop/LiftIQ/node_modules/%40mantine/core/src/core/MantineProvider/MantineProvider.tsx"],"sourcesContent":["import './baseline.css';\nimport './global.css';\nimport './default-css-variables.css';\n\nimport { localStorageColorSchemeManager, MantineColorSchemeManager } from './color-scheme-managers';\nimport { MantineContext, MantineStylesTransform } from './Mantine.context';\nimport { MantineClasses } from './MantineClasses';\nimport { CSSVariablesResolver, MantineCssVariables } from './MantineCssVariables';\nimport { MantineThemeProvider } from './MantineThemeProvider';\nimport type { MantineColorScheme, MantineThemeOverride } from './theme.types';\nimport { useProviderColorScheme } from './use-mantine-color-scheme';\nimport { useRespectReduceMotion } from './use-respect-reduce-motion';\n\nexport interface MantineProviderProps {\n  /** Theme override object */\n  theme?: MantineThemeOverride;\n\n  /** Used to retrieve/set color scheme value in external storage, by default uses `window.localStorage` */\n  colorSchemeManager?: MantineColorSchemeManager;\n\n  /** Default color scheme value used when `colorSchemeManager` cannot retrieve value from external storage, `light` by default */\n  defaultColorScheme?: MantineColorScheme;\n\n  /** Forces color scheme value, if set, MantineProvider ignores `colorSchemeManager` and `defaultColorScheme` */\n  forceColorScheme?: 'light' | 'dark';\n\n  /** CSS selector to which CSS variables should be added, `:root` by default */\n  cssVariablesSelector?: string;\n\n  /** Determines whether theme CSS variables should be added to given `cssVariablesSelector` @default `true` */\n  withCssVariables?: boolean;\n\n  /** Determines whether CSS variables should be deduplicated: if CSS variable has the same value as in default theme, it is not added in the runtime. @default `true`. */\n  deduplicateCssVariables?: boolean;\n\n  /** Function to resolve root element to set `data-mantine-color-scheme` attribute, must return undefined on server, `() => document.documentElement` by default */\n  getRootElement?: () => HTMLElement | undefined;\n\n  /** A prefix for components static classes (for example {selector}-Text-root), `mantine` by default */\n  classNamesPrefix?: string;\n\n  /** Function to generate nonce attribute added to all generated `<style />` tags */\n  getStyleNonce?: () => string;\n\n  /** Function to generate CSS variables based on theme object */\n  cssVariablesResolver?: CSSVariablesResolver;\n\n  /** Determines whether components should have static classes, for example, `mantine-Button-root`. @default `true` */\n  withStaticClasses?: boolean;\n\n  /** Determines whether global classes should be added with `<style />` tag. Global classes are required for `hiddenFrom`/`visibleFrom` and `lightHidden`/`darkHidden` props to work. @default `true`. */\n  withGlobalClasses?: boolean;\n\n  /** An object to transform `styles` and `sx` props into css classes, can be used with CSS-in-JS libraries */\n  stylesTransform?: MantineStylesTransform;\n\n  /** Your application */\n  children?: React.ReactNode;\n\n  /** Environment at which the provider is used, `'test'` environment disables all transitions and portals */\n  env?: 'default' | 'test';\n}\n\nexport function MantineProvider({\n  theme,\n  children,\n  getStyleNonce,\n  withStaticClasses = true,\n  withGlobalClasses = true,\n  deduplicateCssVariables = true,\n  withCssVariables = true,\n  cssVariablesSelector = ':root',\n  classNamesPrefix = 'mantine',\n  colorSchemeManager = localStorageColorSchemeManager(),\n  defaultColorScheme = 'light',\n  getRootElement = () => document.documentElement,\n  cssVariablesResolver,\n  forceColorScheme,\n  stylesTransform,\n  env,\n}: MantineProviderProps) {\n  const { colorScheme, setColorScheme, clearColorScheme } = useProviderColorScheme({\n    defaultColorScheme,\n    forceColorScheme,\n    manager: colorSchemeManager,\n    getRootElement,\n  });\n\n  useRespectReduceMotion({\n    respectReducedMotion: theme?.respectReducedMotion || false,\n    getRootElement,\n  });\n\n  return (\n    <MantineContext.Provider\n      value={{\n        colorScheme,\n        setColorScheme,\n        clearColorScheme,\n        getRootElement,\n        classNamesPrefix,\n        getStyleNonce,\n        cssVariablesResolver,\n        cssVariablesSelector,\n        withStaticClasses,\n        stylesTransform,\n        env,\n      }}\n    >\n      <MantineThemeProvider theme={theme}>\n        {withCssVariables && (\n          <MantineCssVariables\n            cssVariablesSelector={cssVariablesSelector}\n            deduplicateCssVariables={deduplicateCssVariables}\n          />\n        )}\n        {withGlobalClasses && <MantineClasses />}\n        {children}\n      </MantineThemeProvider>\n    </MantineContext.Provider>\n  );\n}\n\nMantineProvider.displayName = '@mantine/core/MantineProvider';\n\nexport interface HeadlessMantineProviderProps {\n  /** Theme override object */\n  theme?: MantineThemeOverride;\n\n  /** Your application */\n  children?: React.ReactNode;\n\n  /** Environment at which the provider is used, `'test'` environment disables all transitions and portals */\n  env?: 'default' | 'test';\n}\n\nexport function HeadlessMantineProvider({ children, theme, env }: HeadlessMantineProviderProps) {\n  return (\n    <MantineContext.Provider\n      value={{\n        colorScheme: 'auto',\n        setColorScheme: () => {},\n        clearColorScheme: () => {},\n        getRootElement: () => document.documentElement,\n        classNamesPrefix: 'mantine',\n        cssVariablesSelector: ':root',\n        withStaticClasses: false,\n        headless: true,\n        env,\n      }}\n    >\n      <MantineThemeProvider theme={theme}>{children}</MantineThemeProvider>\n    </MantineContext.Provider>\n  );\n}\n\nHeadlessMantineProvider.displayName = '@mantine/core/HeadlessMantineProvider';\n"],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@mantine/core/esm/core/MantineProvider/mantine-html-props.mjs","sources":["file:///Users/maxrutherford/Desktop/LiftIQ/node_modules/%40mantine/core/src/core/MantineProvider/mantine-html-props.ts"],"sourcesContent":["export const mantineHtmlProps = {\n  suppressHydrationWarning: true,\n  'data-mantine-color-scheme': 'light',\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,gBAAA,GAAmB;IAC9B,wBAAA,EAA0B,IAAA;IAC1B,2BAAA,EAA6B;AAC/B","debugId":null}}]
}